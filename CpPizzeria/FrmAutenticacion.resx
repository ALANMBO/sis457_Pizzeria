<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="erpClave.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>251, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gAL/9iAC//yIBP//JAT//+QI///yEf//9KU=
</value>
  </data>
  <metadata name="erpUsuario.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>351, 17</value>
  </metadata>
</root>